/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.ctk.vo;

import java.io.*;

import org.apache.ignite.cache.query.annotations.QuerySqlField;

/**
 * Employees definition.
 *
 * Code generated by Apache Ignite Schema Import utility: 08/18/2016.
 */
public class Employees implements Serializable {
    /** */
    private static final long serialVersionUID = 0L;

    /** Value for birthDate. */
    @QuerySqlField(index = true)
    private java.sql.Date birthDate;

    /** Value for firstName. */
    private String firstName;

    /** Value for lastName. */
    private String lastName;

    /** Value for gender. */
    private String gender;

    /** Value for hireDate. */
    private java.sql.Date hireDate;

    /**
     * Empty constructor.
     */
    public Employees() {
        // No-op.
    }

    /**
     * Full constructor.
     */
    public Employees(
        java.sql.Date birthDate,
        String firstName,
        String lastName,
        String gender,
        java.sql.Date hireDate
    ) {
        this.birthDate = birthDate;
        this.firstName = firstName;
        this.lastName = lastName;
        this.gender = gender;
        this.hireDate = hireDate;
    }

    /**
     * Gets birthDate.
     *
     * @return Value for birthDate.
     */
    public java.sql.Date getBirthDate() {
        return birthDate;
    }

    /**
     * Sets birthDate.
     *
     * @param birthDate New value for birthDate.
     */
    public void setBirthDate(java.sql.Date birthDate) {
        this.birthDate = birthDate;
    }

    /**
     * Gets firstName.
     *
     * @return Value for firstName.
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Sets firstName.
     *
     * @param firstName New value for firstName.
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Gets lastName.
     *
     * @return Value for lastName.
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Sets lastName.
     *
     * @param lastName New value for lastName.
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Gets gender.
     *
     * @return Value for gender.
     */
    public String getGender() {
        return gender;
    }

    /**
     * Sets gender.
     *
     * @param gender New value for gender.
     */
    public void setGender(String gender) {
        this.gender = gender;
    }

    /**
     * Gets hireDate.
     *
     * @return Value for hireDate.
     */
    public java.sql.Date getHireDate() {
        return hireDate;
    }

    /**
     * Sets hireDate.
     *
     * @param hireDate New value for hireDate.
     */
    public void setHireDate(java.sql.Date hireDate) {
        this.hireDate = hireDate;
    }

    /** {@inheritDoc} */
    @Override public boolean equals(Object o) {
        if (this == o)
            return true;

        if (!(o instanceof Employees))
            return false;

        Employees that = (Employees)o;

        if (birthDate != null ? !birthDate.equals(that.birthDate) : that.birthDate != null)
            return false;

        if (firstName != null ? !firstName.equals(that.firstName) : that.firstName != null)
            return false;

        if (lastName != null ? !lastName.equals(that.lastName) : that.lastName != null)
            return false;

        if (gender != null ? !gender.equals(that.gender) : that.gender != null)
            return false;

        if (hireDate != null ? !hireDate.equals(that.hireDate) : that.hireDate != null)
            return false;

        return true;
    }

    /** {@inheritDoc} */
    @Override public int hashCode() {
        int res = birthDate != null ? birthDate.hashCode() : 0;

        res = 31 * res + (firstName != null ? firstName.hashCode() : 0);

        res = 31 * res + (lastName != null ? lastName.hashCode() : 0);

        res = 31 * res + (gender != null ? gender.hashCode() : 0);

        res = 31 * res + (hireDate != null ? hireDate.hashCode() : 0);

        return res;
    }

    /** {@inheritDoc} */
    @Override public String toString() {
        return "Employees [birthDate=" + birthDate +
            ", firstName=" + firstName +
            ", lastName=" + lastName +
            ", gender=" + gender +
            ", hireDate=" + hireDate +
            "]";
    }
}

